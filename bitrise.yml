format_version: 8
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - SAMPLE_APP_REPOSITORY_URL: https://github.com/bitrise-io/sample-apps-android-abi-split.git
  - BRANCH: master
  - GRADLEW_PATH: "./gradlew"
  # define these in your .bitrise.secrets.yml
  # Keystore password == key password
  - ANDROID_SIGN_SAME_PASS_KEYSTORE_URL: $ANDROID_SIGN_SAME_PASS_KEYSTORE_URL
  - ANDROID_SIGN_SAME_PASS_KEYSTORE_PASSWORD: $ANDROID_SIGN_SAME_PASS_KEYSTORE_PASSWORD
  - ANDROID_SIGN_SAME_PASS_KEYSTORE_ALIAS: $ANDROID_SIGN_SAME_PASS_KEYSTORE_ALIAS
  - ANDROID_SIGN_SAME_PASS_KEYSTORE_PRIVATE_KEY_PASSWORD: $ANDROID_SIGN_SAME_PASS_KEYSTORE_PRIVATE_KEY_PASSWORD
  # Keystore password != key password
  - ANDROID_SIGN_DIFF_PASS_KEYSTORE_URL: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_URL
  - ANDROID_SIGN_DIFF_PASS_KEYSTORE_PASSWORD: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_PASSWORD
  - ANDROID_SIGN_DIFF_PASS_KEYSTORE_ALIAS: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_ALIAS
  - ANDROID_SIGN_DIFF_PASS_KEYSTORE_PRIVATE_KEY_PASSWORD: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_PRIVATE_KEY_PASSWORD
  # Default alias ('mykey')
  - ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_URL: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_URL
  - ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_PASSWORD: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_PASSWORD
  - ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_ALIAS: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_ALIAS
  - ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_PRIVATE_KEY_PASSWORD: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_PRIVATE_KEY_PASSWORD
  # Android Studio generated keystore
  - ANDROID_SIGN_STUDIO_GEN_KEYSTORE_URL: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_URL
  - ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PASSWORD: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PASSWORD
  - ANDROID_SIGN_STUDIO_GEN_KEYSTORE_ALIAS: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_ALIAS
  - ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PRIVATE_KEY_PASSWORD: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PRIVATE_KEY_PASSWORD

workflows:
  ci:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - test

  test:
    steps:
    - script:
        run_if: $.IsCI
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            if [[ "$OSTYPE" == "linux-gnu"* ]]; then
              sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
              sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
              export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
              envman add --key JAVA_HOME --value "/usr/lib/jvm/java-11-openjdk-amd64" 
            elif [[ "$OSTYPE" == "darwin"* ]]; then
              jenv global 11
              export JAVA_HOME="$(jenv prefix)"
              envman add --key JAVA_HOME --value "$(jenv prefix)"
            fi
    after_run:
    - test_apk
    - test_apk_debug
    - test_bundle

  debug:
    envs:
    - APK_SIGNER: "true"
    # Must define these envs in .bitrise.secrets.yml
    - BITRISE_APK_PATH: $BITRISE_APK_PATH
    - BITRISEIO_ANDROID_KEYSTORE_URL: $BITRISEIO_ANDROID_KEYSTORE_URL
    - BITRISEIO_ANDROID_KEYSTORE_PASSWORD: $BITRISEIO_ANDROID_KEYSTORE_PASSWORD
    - BITRISEIO_ANDROID_KEYSTORE_ALIAS: $BITRISEIO_ANDROID_KEYSTORE_ALIAS
    - BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: $BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD
    steps:
    - path::./:
        title: Debug sign-apk Step
        inputs:
        - keystore_url: $BITRISEIO_ANDROID_KEYSTORE_URL
        - keystore_password: $BITRISEIO_ANDROID_KEYSTORE_PASSWORD
        - keystore_alias: $BITRISEIO_ANDROID_KEYSTORE_ALIAS
        - private_key_password: $BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD
        - use_apk_signer: $APK_SIGNER


  test_apk:
    envs:
    - GRADLE_TASK: assembleRelease
    - APK_FILE_INCLUDE_FILTER: "*.apk"
    after_run:
    - create_build_artifact
    - _jarsigner
    - _apksigner

  # Using apksigner zipalign fails to zipalign already zipaligned artifact
  test_apk_debug:
    envs:
    - GRADLE_TASK: assembleDebug
    - APK_FILE_INCLUDE_FILTER: "*.apk"
    after_run:
    - create_build_artifact
    - _jarsigner
    - _apksigner
    
  test_bundle:
    envs:
    - GRADLE_TASK: bundleRelease
    - APK_FILE_INCLUDE_FILTER: "*.aab"
    after_run:
    - create_build_artifact
    - _jarsigner
    - _apksigner

  create_build_artifact:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to test/_tmp dir
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git@master:
        inputs:
          - repository_url: $SAMPLE_APP_REPOSITORY_URL
          - clone_into_dir: .
          - branch: $BRANCH
    - install-missing-android-tools:
        inputs:
        - ndk_revision: '16'
        run_if: ".IsCI"
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            envman unset --key BITRISE_APK_PATH
            envman unset --key BITRISE_AAB_PATH
    - gradle-runner:
        inputs:
        - gradle_task: "$GRADLE_TASK"
        - gradlew_path: "$GRADLEW_PATH"
        - app_file_include_filter: $APK_FILE_INCLUDE_FILTER
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            if [ -n "$BITRISE_APK_PATH" ]; then
              envman add --key ORIG_BITRISE_APK_PATH --value ${BITRISE_APK_PATH}
            fi

  reset_apk_path:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            if [ -n "$ORIG_BITRISE_APK_PATH" ]; then
              envman add --key BITRISE_APK_PATH --value ${ORIG_BITRISE_APK_PATH}
            fi

  _jarsigner:
    steps:
    - script:
        inputs:
        - content: |-
            echo "jarsigner"
            envman add --key APK_SIGNER --value "false"
    after_run:
    - _tests

  _apksigner:
    steps:
    - script:
        inputs:
        - content: |-
            echo "apksigner"
            envman add --key APK_SIGNER --value "true"
    after_run:
    - _tests

  _tests:
    after_run:
    - reset_apk_path
    - test1
    - reset_apk_path
    - test2
    - reset_apk_path
    - test3
    - reset_apk_path
    - test4
    - reset_apk_path
    - test5
    - reset_apk_path
    - test6

  test1:
    steps:
    - path::./:
        title: Step Test - keystore pass == key pass
        inputs:
        - keystore_url: $ANDROID_SIGN_SAME_PASS_KEYSTORE_URL
        - keystore_password: $ANDROID_SIGN_SAME_PASS_KEYSTORE_PASSWORD
        - keystore_alias: $ANDROID_SIGN_SAME_PASS_KEYSTORE_ALIAS
        - private_key_password: $ANDROID_SIGN_SAME_PASS_KEYSTORE_PRIVATE_KEY_PASSWORD
        - use_apk_signer: $APK_SIGNER

  test2:
    steps:
    - path::./:
        title: Step Test - keystore pass != key pass
        inputs:
        - keystore_url: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_URL
        - keystore_password: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_PASSWORD
        - keystore_alias: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_ALIAS
        - private_key_password: $ANDROID_SIGN_DIFF_PASS_KEYSTORE_PRIVATE_KEY_PASSWORD
        - use_apk_signer: $APK_SIGNER

  test3:
    steps:
    - path::./:
        title: Step Test - default alias
        inputs:
        - keystore_url: $BITRISEIO_ANDROID_KEYSTORE_3_URL
        - keystore_password: $BITRISEIO_ANDROID_KEYSTORE_PASSWORD_3
        - keystore_alias: $BITRISEIO_ANDROID_KEYSTORE_ALIAS_3
        - private_key_password: $BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD_3
        - use_apk_signer: $APK_SIGNER

  test4:
    steps:
    - path::./:
        title: Step Test - android studio generated keystore (jks)
        inputs:
        - keystore_url: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_URL
        - keystore_password: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_PASSWORD
        - keystore_alias: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_ALIAS
        - private_key_password: $ANDROID_SIGN_DEFAULT_ALIAS_KEYSTORE_PRIVATE_KEY_PASSWORD
        - use_apk_signer: $APK_SIGNER

  test5:
    steps:
    - path::./:
        title: Step Test - android studio generated keystore (jks) + custom artifact name
        inputs:
        - keystore_url: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_URL
        - keystore_password: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PASSWORD
        - keystore_alias: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_ALIAS
        - private_key_password: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PRIVATE_KEY_PASSWORD
        - output_name: "test-artifact-name"
        - use_apk_signer: $APK_SIGNER

  test6:
    steps:
    - path::./:
        title: Step Test - android studio generated keystore (jks) + custom artifact name second time to see collisions if any
        inputs:
        - keystore_url: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_URL
        - keystore_password: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PASSWORD
        - keystore_alias: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_ALIAS
        - private_key_password: $ANDROID_SIGN_STUDIO_GEN_KEYSTORE_PRIVATE_KEY_PASSWORD
        - output_name: "test-artifact-name"
        - use_apk_signer: $APK_SIGNER
            
  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            stepman audit --step-yml ./step.yml
