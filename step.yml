title: "Android Sign"
summary: Signs your APK or Android App Bundle before uploading it to Google Play Store.
description: |-
  Once you have uploaded your keystore file and provided your keystore credentials on the **Code Signing** tab of the Workflow Editor, the **Android Sign** Step signs your APK digitally. 
  Bitrise assigns Environment Variables to the uploaded file and credentials, and uses those in the respective fields of the **Android Sign** Step. 
  Once the Step runs, it produces a signed APK or App Bundle which will be used as the input value of the **App file path** field in the **Google Play Deploy** Step.   

  ### Configuring the Step

  1. Add the **Android Sign** Step after a build Step in your deploy workflow.
  2. Upload the keystore file to the **Upload file** field on the **Code Signing** tab.
  3. Provide your keystore password, keystore alias and private key password to the relevant fields on the **Code Signing** tab.
  4. Run your build.


  ### Troubleshooting
  Make sure you have the **Android Sign** Step right after a build Steps but before **Deploy to Google Play** Step in your deploy workflow.
  If you wish to get your Android project signed automatically, use the **Android Sign** Step and do not set any gradle task for the signing, otherwise, the Step will fail.


  ### Useful links
  - [Android code signing using Android Sign Step](https://devcenter.bitrise.io/code-signing/android-code-signing/android-code-signing-using-bitrise-sign-apk-step/)
  - [Android deployment](https://devcenter.bitrise.io/deploy/android-deploy/android-deployment-index/)


  ### Related Steps
  - [Android Build](https://www.bitrise.io/integrations/steps/android-build)
  - [Gradle Runner](https://www.bitrise.io/integrations/steps/gradle-runner)
  - [Deploy to Bitrise.io](https://www.bitrise.io/integrations/steps/deploy-to-bitrise-io)
website: https://github.com/bitrise-steplib/steps-sign-apk
source_code_url: https://github.com/bitrise-steplib/steps-sign-apk
support_url: https://github.com/bitrise-steplib/steps-sign-apk/issues
host_os_tags:
  - osx-10.10
  - ubuntu
project_type_tags:
  - android
  - xamarin
  - react-native
  - cordova
  - ionic
type_tags:
  - code-sign
is_requires_admin_user: false
is_always_run: false
is_skippable: false
deps:
  brew:
  - name: go
  apt_get:
  - name: golang
    bin_name: go
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-sign-apk
inputs:
  - apk_path:
    opts:
      title: "[DEPRECATED] Build artifact path."
      category: Deprecated
      summary: "`Android App Bundle (.aab)` or `Android Aplication Package (.apk)`. Deprecated, use `android_app` instead."
      description: |-
        __This input is deprecated and will be removed on 20 August 2019, use `App file path` input instead!__

        Path(s) to the build artifact file to sign (`.aab` or `.apk`).

        You can provide multiple build artifact file paths separated by `|` character.

        Deprecated, use `android_app` instead.

        Format examples:

        - `/path/to/my/app.apk`
        - `/path/to/my/app1.apk|/path/to/my/app2.apk|/path/to/my/app3.apk`

        - `/path/to/my/app.aab`
        - `/path/to/my/app1.aab|/path/to/my/app2.apk|/path/to/my/app3.aab`
      is_required: true
  - android_app: "$BITRISE_APK_PATH\n$BITRISE_AAB_PATH"
    opts:
      title: "App file path."
      summary: "`Android App Bundle (.aab)` or `Android Aplication Package (.apk)`"
      description: |-
        Path(s) to the build artifact file to sign (`.aab` or `.apk`).

        You can provide multiple build artifact file paths separated by `|` character.

        Format examples:

        - `/path/to/my/app.apk`
        - `/path/to/my/app1.apk|/path/to/my/app2.apk|/path/to/my/app3.apk`

        - `/path/to/my/app.aab`
        - `/path/to/my/app1.aab|/path/to/my/app2.apk|/path/to/my/app3.aab`
      is_required: true
  - keystore_url: $BITRISEIO_ANDROID_KEYSTORE_URL
    opts:
      title: "Keystore url"
      summary: ""
      description: |-
        For remote keystores you can provide any download location (ex: https://URL/TO/keystore.jks).
        For local keystores provide file path url. (ex: file://PATH/TO/keystore.jks).
      is_required: true
      is_sensitive: true
  - keystore_password: $BITRISEIO_ANDROID_KEYSTORE_PASSWORD
    opts:
      title: "Keystore password"
      summary: ""
      description: ""
      is_required: true
      is_sensitive: true
  - keystore_alias: $BITRISEIO_ANDROID_KEYSTORE_ALIAS
    opts:
      title: "Keystore alias"
      summary: ""
      description: ""
      is_required: true
      is_sensitive: true
  - private_key_password: $BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD
    opts:
      title: "Private key password"
      summary: ""
      description: |
        If key password equals to keystore password, you can leave it empty.
        Otherwise specify the private key password.
      is_sensitive: true
  - page_align: "automatic"
    opts:
      title: "Page alignment"
      summary: ""
      is_sensitive: false
      is_required: true
      value_options:
      - "true"
      - "false"
      - "automatic"
      description: |
        If enabled, it tells zipalign to use memory page alignment for stored shared object files.

        - `automatic`: Enable page alignment for .so files, unless atribute `extractNativeLibs="true"` is set in the AndroidManifest.xml
        - `true`: Enable memory page alignment for .so files
        - `false`: Disable memory page alignment for .so files
  - output_name: ""
    opts:
      title: "Artifact name"
      summary: 'Name of the produced output artifact'
      is_sensitive: false
      description: |
        If is empty then the output name is "app-release-bitrise-signed".
        Else it's the specified name. Do not add extensione here.
  - verbose_log: "false"
    opts:
      title: "Enable verbose logging?"
      description: Enable verbose logging?
      is_required: true
      value_options:
      - "true"
      - "false"
outputs:
- BITRISE_SIGNED_APK_PATH:
  opts:
    title: "Path of the signed APK"
    summary: "Path of the signed APK"
    description: |-
      This output will include the path of the signed APK.
      If the build generates more than one APK this output will contain the last one's path.
- BITRISE_SIGNED_APK_PATH_LIST:
  opts:
    title: "List of the signed APK paths"
    summary: "List of the signed (and copied) APK paths"
    description: |-
      This output will include the paths of the generated APKs
      If multiple APKs are provided for signing the output paths are separated with `|` character, for example, `app-armeabi-v7a-debug.apk|app-mips-debug.apk|app-x86-debug.apk`
- BITRISE_SIGNED_AAB_PATH:
  opts:
    title: "Path of the signed AAB"
    summary: "Path of the signed AAB"
    description: |-
      This output will include the path of the signed AAB.
      If the build generates more than one AAB this output will contain the last one's path.
- BITRISE_SIGNED_AAB_PATH_LIST:
  opts:
    title: "List of the signed AAB paths"
    summary: "List of the signed (and copied) AAB paths"
    description: |-
      This output will include the paths of the generated AABs.
      If multiple AABs are provided for signing the output paths are separated with `|` character, for example, `app-armeabi-v7a-debug.aab|app-mips-debug.aab|app-x86-debug.aab`
- BITRISE_APK_PATH:
  opts:
    title: "Path of the signed APK"
    summary: "Path of the signed APK"
    description: |-
       This output will include the path(s) of the signed APK(s).
       If multiple APKs are provided for signing the output paths are separated with `|` character, for example, `app-armeabi-v7a-debug.apk|app-mips-debug.apk|app-x86-debug.apk`
- BITRISE_AAB_PATH:
  opts:
    title: "Path of the signed AAB"
    summary: "Path of the signed AAB"
    description: |-
       This output will include the path(s) of the signed AAB(s).
       If multiple AABs are provided for signing the output paths are separated with `|` character, for example, `app-armeabi-v7a-debug.aab|app-mips-debug.aab|app-x86-debug.aab`
       
